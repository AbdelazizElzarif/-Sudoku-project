#include<stdio.h>
#include<stdlib.h>
int true_sudoko(char arr[][9],int row,int col);
void fill_sudoko(char arr[][9],int index_x,int index_y);
void print_sudoko(char arr[][9],int row,int col);
int check_row_col(char arr[][9],int row,int col,int index_x,int index_y,int value);

int main()
{
	int try=1;
	int index_x,index_y;
	char arr[9][9]={{'4','3','9',' ',' ',' ','5','8','6'},
		            {'8','7','1',' ',' ',' ','4','2','3'},
					{'6','5','2',' ',' ',' ','9','1','7'},
					{' ',' ',' ','4','3','8',' ',' ',' '},
					{' ',' ',' ','5','1','2',' ',' ',' '},
                    {' ',' ',' ','7','9','6',' ',' ',' '},				
					{'7','6','3',' ',' ',' ','8','9','4'},
		            {'1','8','5',' ',' ',' ','7','3','2'},
	                {'9','2','4',' ',' ',' ','1','6','5'},
				    };
	while(try)
	{
		print_sudoko(arr,9,9);
	    printf("enter index_x and index_y\n");
	    scanf("%d",&index_x);
	    scanf("%d",&index_y);
	    fill_sudoko(arr,index_x,index_y);
		if(true_sudoko(arr,9,9))
		{
			try=0;
		}
		if(try)
		{   
	         print_sudoko(arr,9,9);
		}
		
	}
	
return 0;	
}
int true_sudoko(char arr[][9],int row,int col)
{
	int flag=0,r=0;
	char true[9][9]={{'4','3','9','1','2','7','5','8','6'},
		             {'8','7','1','9','6','5','4','2','3'},
					 {'6','5','2','3','8','4','9','1','7'},
					 {'5','1','6','4','3','8','2','7','9'},
					 {'3','4','7','5','1','2','6','4','8'},
                     {'2','9','8','7','9','6','3','5','1'},				
					 {'7','6','3','2','5','1','8','9','4'},
		             {'1','8','5','6','4','9','7','3','2'},
	                 {'9','2','4','8','7','3','1','6','5'},
				    };
					int i,j;
					for(i=0;i<row&&flag==0;i++)
					{
						for(j=0;j<col&&flag==0;j++)
						{
							if(arr[i][j]!=true[i][j])
							{
								flag=1;
							}
							else
							{
								
							}
						}
					}
					if(flag==0)
					{
						printf("congratulation\n");
						r=1;
					}
					else
					{
						
					}
					return r;
}
void fill_sudoko(char arr[][9],int index_x,int index_y)
{
	fflush(stdin);
	char value;
	printf("enter value\n");
	scanf("%c",&value);
	int r=0,flag=0,f=0;
	int i;
	char space[36][2]={{0,3},{0,4},{0,5},{1,3},{1,4},{1,5},{2,3},{2,4},{2,5},{3,0},{3,1},{3,2},{3,6},{3,7},{3,8},
		               {4,0},{4,1},{4,2},{4,6},{4,7},{4,8},{5,0},{5,1},{5,2},{5,6},{5,7},{5,8},{6,3},{6,4},{6,5},
					   {7,3},{7,4},{7,5},{8,3},{8,4},{8,5}};  
     for(i=0;i<36&&r==0;)
	 {
		 if(index_x==space[i][0])
		 {
			 
			 if(index_y==space[i][1])
			 {
				 r=1;
			 }
			 else
			 {
				 i++;
			 }
		 }
		 else
		 {
			 i++;
		 }
	}
	if(r==1)
	{
		if(check_row_col(arr,9,9,index_x,index_y,value))
		{
			arr[index_x][index_y]=value;
		}
		
	}
	else
	{
		printf("error position to write\n");
		printf("\n");
	}
		                              
	 		 
}
int check_row_col(char arr[][9],int row,int col,int index_x,int index_y,int value)
{
	int i,j,r=1;
	for(i=index_x,j=0;j<row;j++)
	{
		if(arr[i][j]==value)
		{
			r=0;
			printf("repeated in the same row\n");
		}
		
	}
	for(j=index_y,i=0;i<col;i++)
	{
		if(arr[i][j]==value)
		{
			printf("repeated in the same coloum\n");
			r=0;
		}
	}
	return r;
	
}
void print_sudoko(char arr[][9],int row,int col)
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			printf("%c ",arr[i][j]);
		}
		printf("\n");
	}
	printf("\n");
}